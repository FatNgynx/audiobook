"use client";

import Link from "next/link";
import { useState } from "react";

export default function HoiVienPage() {
  const [selectedPlan, setSelectedPlan] = useState<string | null>(null);

  const plans = [
    {
      id: "standard",
      name: "Standard",
      price: "59.000",
      currency: "VND",
      duration: "th√°ng",
      features: [
        "ƒê·ªçc kh√¥ng gi·ªõi h·∫°n s√°ch ƒëi·ªán t·ª≠",
        "Nghe s√°ch n√≥i c∆° b·∫£n",
        "T√πy ch·ªânh giao di·ªán",
        "ƒê·ªìng b·ªô tr√™n 2 thi·∫øt b·ªã",
        "H·ªó tr·ª£ kh√°ch h√†ng 24/7",
        "Nhi·ªÅu ng√¥n ng·ªØ h·ªó tr·ª£",
      ],
      popular: false,
    },
    {
      id: "premium",
      name: "Premium",
      price: "89.000",
      currency: "VND", 
      duration: "th√°ng",
      features: [
        "T·∫•t c·∫£ t√≠nh nƒÉng Standard",
        "S√°ch b·∫£n quy·ªÅn",
        "Nghe s√°ch n√≥i ch·∫•t l∆∞·ª£ng cao",
        "T√πy ch·ªânh gi·ªçng audiobook",
        "T·∫£i xu·ªëng offline kh√¥ng gi·ªõi h·∫°n",
        "ƒê·ªìng b·ªô kh√¥ng gi·ªõi h·∫°n thi·∫øt b·ªã",
        "∆Øu ti√™n h·ªó tr·ª£ kh√°ch h√†ng",
        "Truy c·∫≠p s·ªõm s√°ch m·ªõi",
        "T√≠nh nƒÉng ghi ch√∫ v√† ƒë√°nh d·∫•u n√¢ng cao",
      ],
      popular: true,
    },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-slate-100">
      {/* Header Section */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-6xl mx-auto px-4 py-8">
          <div className="text-center">
            <Link href="/" className="inline-flex items-center gap-2 text-slate-600 hover:text-slate-800 mb-4">
              ‚Üê Quay l·∫°i trang ch·ªß
            </Link>
            <h1 className="text-4xl md:text-5xl font-bold text-slate-800 mb-4">
              Ch·ªçn G√≥i H·ªôi Vi√™n
            </h1>
            <p className="text-xl text-slate-600 max-w-2xl mx-auto">
              Tr·∫£i nghi·ªám ƒë·ªçc s√°ch kh√¥ng gi·ªõi h·∫°n v·ªõi c√°c g√≥i h·ªôi vi√™n ph√π h·ª£p nh·∫•t cho b·∫°n
            </p>
          </div>
        </div>
      </div>

      {/* Plans Section */}
      <div className="max-w-6xl mx-auto px-4 py-16">
        <div className="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
          {plans.map((plan) => (
            <div
              key={plan.id}
              className={`relative bg-white rounded-2xl shadow-xl border-2 transition-all duration-300 hover:shadow-2xl ${
                selectedPlan === plan.id
                  ? "border-blue-500 ring-4 ring-blue-100"
                  : plan.popular
                  ? "border-amber-400"
                  : "border-gray-200 hover:border-gray-300"
              }`}
              onClick={() => setSelectedPlan(plan.id)}
            >
              {/* Popular Badge */}
              {plan.popular && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <span className="bg-gradient-to-r from-amber-400 to-orange-500 text-white px-6 py-2 rounded-full text-sm font-semibold shadow-lg">
                    üî• Ph·ªï bi·∫øn nh·∫•t
                  </span>
                </div>
              )}

              <div className="p-8">
                {/* Plan Header */}
                <div className="text-center mb-8">
                  <h3 className="text-2xl font-bold text-slate-800 mb-2">{plan.name}</h3>
                  <div className="flex items-baseline justify-center gap-1">
                    <span className="text-4xl font-extrabold text-slate-900">{plan.price}</span>
                    <span className="text-lg text-slate-600">{plan.currency}</span>
                    <span className="text-sm text-slate-500">/{plan.duration}</span>
                  </div>
                </div>

                {/* Features List */}
                <ul className="space-y-4 mb-8">
                  {plan.features.map((feature, index) => (
                    <li key={index} className="flex items-start gap-3">
                      <svg
                        className="w-5 h-5 text-green-500 mt-0.5 flex-shrink-0"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fillRule="evenodd"
                          d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                          clipRule="evenodd"
                        />
                      </svg>
                      <span className="text-slate-700">{feature}</span>
                    </li>
                  ))}
                </ul>

                {/* CTA Button */}
                <button
                  className={`w-full py-4 px-6 rounded-xl font-semibold text-lg transition-all duration-200 ${
                    selectedPlan === plan.id
                      ? "bg-blue-600 text-white hover:bg-blue-700 shadow-lg"
                      : plan.popular
                      ? "bg-gradient-to-r from-amber-500 to-orange-500 text-white hover:from-amber-600 hover:to-orange-600 shadow-lg"
                      : "bg-slate-800 text-white hover:bg-slate-900"
                  }`}
                  onClick={(e) => {
                    e.stopPropagation();
                    setSelectedPlan(plan.id);
                  }}
                >
                  {selectedPlan === plan.id ? "ƒê√£ ch·ªçn ‚úì" : `Ch·ªçn g√≥i ${plan.name}`}
                </button>
              </div>
            </div>
          ))}
        </div>

        {/* Continue Button */}
        {selectedPlan && (
          <div className="text-center mt-12">
            <button className="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-12 py-4 rounded-xl text-lg font-semibold hover:from-blue-700 hover:to-purple-700 transition-all duration-200 shadow-lg hover:shadow-xl">
              Ti·∫øp t·ª•c thanh to√°n ‚Üí
            </button>
          </div>
        )}
      </div>

      {/* FAQ Section */}
      <div className="bg-white border-t">
        <div className="max-w-4xl mx-auto px-4 py-16">
          <h2 className="text-3xl font-bold text-center text-slate-800 mb-12">
            C√¢u h·ªèi th∆∞·ªùng g·∫∑p
          </h2>
          <div className="grid md:grid-cols-2 gap-8">
            <div>
              <h3 className="font-semibold text-slate-800 mb-2">
                T√¥i c√≥ th·ªÉ h·ªßy ƒëƒÉng k√Ω b·∫•t c·ª© l√∫c n√†o kh√¥ng?
              </h3>
              <p className="text-slate-600">
                C√≥, b·∫°n c√≥ th·ªÉ h·ªßy ƒëƒÉng k√Ω b·∫•t c·ª© l√∫c n√†o t·ª´ t√†i kho·∫£n c·ªßa m√¨nh. Kh√¥ng c√≥ ph√≠ h·ªßy.
              </p>
            </div>
            <div>
              <h3 className="font-semibold text-slate-800 mb-2">
                G√≥i Premium c√≥ g√¨ kh√°c so v·ªõi Standard?
              </h3>
              <p className="text-slate-600">
                Premium c√≥ th√™m t√≠nh nƒÉng nghe s√°ch ch·∫•t l∆∞·ª£ng cao, t·∫£i offline kh√¥ng gi·ªõi h·∫°n v√† nhi·ªÅu t√≠nh nƒÉng ƒë·ªôc quy·ªÅn kh√°c.
              </p>
            </div>
            <div>
              <h3 className="font-semibold text-slate-800 mb-2">
                C√≥ ƒë∆∞·ª£c d√πng th·ª≠ mi·ªÖn ph√≠ kh√¥ng?
              </h3>
              <p className="text-slate-600">
                C√≥, ch√∫ng t√¥i cung c·∫•p 7 ng√†y d√πng th·ª≠ mi·ªÖn ph√≠ cho t·∫•t c·∫£ g√≥i h·ªôi vi√™n.
              </p>
            </div>
            <div>
              <h3 className="font-semibold text-slate-800 mb-2">
                Ph∆∞∆°ng th·ª©c thanh to√°n n√†o ƒë∆∞·ª£c ch·∫•p nh·∫≠n?
              </h3>
              <p className="text-slate-600">
                Ch√∫ng t√¥i ch·∫•p nh·∫≠n th·∫ª t√≠n d·ª•ng, th·∫ª ghi n·ª£, v√≠ ƒëi·ªán t·ª≠ v√† chuy·ªÉn kho·∫£n ng√¢n h√†ng.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}